apply plugin: 'com.android.application'

apply plugin: 'plugin'

name {
    name 'mingzi'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.pengmaster.view_okui"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    //版本控制
    buildTypes {
        //内测版
        internal {
            initWith debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //渠道包 收费版/免费版
    flavorDimensions 'price'
    productFlavors {
        free {
            dimension 'price'
        }
        paid {
            dimension 'price'
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/resources/'] } }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.android.support:support-v4:29.0.0'

    implementation project(':lib_bindview')
    annotationProcessor project(':28_lib_processor')

}


task versinInfo() {
    doLast {
        def versionPropsFile = file('version.properties')
        def versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def codeBumped = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = codeBumped.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
}
